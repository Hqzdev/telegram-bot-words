#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook Telegram Bot
"""

import os
import requests
import json
from dotenv import load_dotenv

def setup_webhook(bot_token: str, webhook_url: str):
    """–ù–∞—Å—Ç—Ä–æ–∏—Ç—å webhook –¥–ª—è Telegram Bot"""
    
    # URL –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook
    url = f"https://api.telegram.org/bot{bot_token}/setWebhook"
    
    # –î–∞–Ω–Ω—ã–µ –¥–ª—è webhook
    data = {
        "url": webhook_url,
        "allowed_updates": ["message", "callback_query"]
    }
    
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
        response = requests.post(url, json=data)
        response.raise_for_status()
        
        result = response.json()
        
        if result.get("ok"):
            print(f"‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {webhook_url}")
            print(f"üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: {result.get('description', 'N/A')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook: {result.get('description', 'Unknown error')}")
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: {e}")
    except json.JSONDecodeError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: {e}")

def get_webhook_info(bot_token: str):
    """–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º webhook"""
    
    url = f"https://api.telegram.org/bot{bot_token}/getWebhookInfo"
    
    try:
        response = requests.get(url)
        response.raise_for_status()
        
        result = response.json()
        
        if result.get("ok"):
            webhook_info = result.get("result", {})
            print("üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ webhook:")
            print(f"   URL: {webhook_info.get('url', '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')}")
            print(f"   –û—à–∏–±–∫–∏: {webhook_info.get('last_error_message', '–ù–µ—Ç')}")
            print(f"   –û–±–Ω–æ–≤–ª–µ–Ω–∏—è: {webhook_info.get('pending_update_count', 0)}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {result.get('description', 'Unknown error')}")
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: {e}")

def delete_webhook(bot_token: str):
    """–£–¥–∞–ª–∏—Ç—å webhook"""
    
    url = f"https://api.telegram.org/bot{bot_token}/deleteWebhook"
    
    try:
        response = requests.post(url)
        response.raise_for_status()
        
        result = response.json()
        
        if result.get("ok"):
            print("‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è webhook: {result.get('description', 'Unknown error')}")
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: {e}")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    load_dotenv()
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
    bot_token = os.getenv('BOT_TOKEN')
    if not bot_token:
        print("‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è BOT_TOKEN")
        return
    
    print("ü§ñ Telegram Bot Webhook Manager")
    print("=" * 40)
    
    while True:
        print("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
        print("1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å webhook")
        print("2. –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ webhook")
        print("3. –£–¥–∞–ª–∏—Ç—å webhook")
        print("4. –í—ã—Ö–æ–¥")
        
        choice = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-4): ").strip()
        
        if choice == "1":
            webhook_url = input("–í–≤–µ–¥–∏—Ç–µ URL webhook (–Ω–∞–ø—Ä–∏–º–µ—Ä: https://your-app.vercel.app/webhook): ").strip()
            if webhook_url:
                setup_webhook(bot_token, webhook_url)
            else:
                print("‚ùå URL –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
                
        elif choice == "2":
            get_webhook_info(bot_token)
            
        elif choice == "3":
            confirm = input("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å webhook? (y/N): ").strip().lower()
            if confirm == 'y':
                delete_webhook(bot_token)
                
        elif choice == "4":
            print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
            
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

if __name__ == "__main__":
    main()
